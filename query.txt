QUESTION1
parent table
1.CUSTOMERS
primarykey-customerid
2.CATEGORY
primaryid-categoryid
3.EMPLOYEES
primarykey-employeeid
4.SHIPPERS
primarykey-shipperid
5.SUPPLIER
primarykey-suplierid
	
children table
6.ORDERS
primarykey-orderid
foreignkey-customerid
foreignkey-shipperid
foreignkey-employeeid
7.PRODUCTS
primarykey-productid
foreignkey-categoryid
foreignkey-supplierid
8.ORDER DETAILS
primarykey-orderdetailid
foreignkey-orderid
foreignkey-productsid

child/parent
1.ORDERS TABLE
2.PRODUCTS TABLE
CHILD TABLE
1.ORDERDETS TABLE

	ADDED TABLE
1. payments table
2.primary key-orderid
3.foreign key-orderdetailsid


QUESTION 2
SELECT orders.OrderID, orders.OrderDate,customers.Customername,customers.City,customers.Address,customers.PostalCode,
shippers.ShipperName,products.productName,orders.quantity
FROM Orders 
JOIN Customers 
ON ord.CustomerID=cu.CustomerID
JOIN Shippers 
ON ord.ShipperID=shp.ShipperID
JOIN Orderdetails
ON ordt.orderID=ord.orderID
JOIN Products 
ON prd.productID=ordt.productID;

QUESTION 3
SELECT pr.productname,shp.shippername,
FROM Orders AS Ord
JOIN Orderdetails AS ordt
ON ordt.orderid=Ord.orderid
JOIN  products AS pr
ON pr.productid=ordt.productid
JOIN shippers AS shp
ON shp.shipperid=ord.shipperid

QUESTION 4
SELECT shippers.shippername, count(products.productid) as total_products_supplied
FROM orders
JOIN orderdetails
ON orderdetails.orderid=orders.orderid
JOIN products
ON products.productid=orderdetails.productid
JOIN Shippers
ON Shippers.Shipperid=orders.Shipperid
GROUP BY shippers.shippername;

QUESTION 5
SELECT customers.customername
FROM customers
WHERE customers.customername NOT LIKE '%son%'

QUESTION 6
SELECT  sum(orderdetails.quantity*products.price),orders.orderdate
FROM orders
JOIN orderdetails
ON orderdetails.orderid=orders.orderid
JOIN products
ON products.productid=orderdetails.productid
WHERE orders.orderdate like '%1997-%'

QUESTION 7
SELECT cu.customername,SUM(ordt.quantity*pr.price)
AS totalamountspent
FROM  customers AS cu
JOIN orders as ord
ON ord.customerid=cu.customerid
JOIN orderdetails AS ordt
ON ordt.orderid=ord.orderid
JOIN products AS pr
ON pr.productid=ordt.productid
GROUP BY cu.customername
 
QUESTION 8
SELECT suppliers.suppliername,sum(ordt.quantity) AS totalsupplied
FROM suppliers
JOIN products
ON products.supplierid=products.supplierid
JOIN orderdetails AS ordt
ON ordt.productid=products.productid
GROUP BY suppliers.suppliername
ODER BY totalsupplied 
DESC
LIMIT 1

QUESTION 9
SELECT pr.productname,sum(ordt.quantity*pr.price)
AS productstotal
FROM orderdetails as ordt
JOIN products as pr
ON products.productid=ordt.productsid

QUESTION 10
SELECT SUBSTR(OrderDate, 6, 2) AS Sales_Month, SUM(Quantity * Price) AS Sum_Sales
FROM Orders AS ord
JOIN OrderDetails AS ordt ON ord.OrderID = ordt.OrderID
JOIN Products AS pr ON ordt.ProductID = pr.ProductID
GROUP BY Sales_Month
ORDER BY Sum_Sales DESC;

QUestion 11
SELECT orderdate, sum ( orderdetails.quantity*products.price ) AS day_sales
FROM orders
JOIN orderdetails
ON orderdetails.orderid=orders.orderid
JOIN products
ON products.productid=orderdetails.productid
GROUP BY orderdate


Question 12
SELECT cu.customername,sum(ordt.quantity*pr.price) as total
FROM customers AS cu
join orders as ord
on ord.customerid=cu.customerid
join orderdetails as ordt
on ordt.orderid=ord.orderid
join products as pr
on pr.productid=ordt.productid
group by cu.customername
order by total DESC

QUESTION 13
CREATE TABLE payments (
payment_id PRIMARY KEY,
payment_date DATE NOT NULL,
amount DECIMAL(10, 2) NOT NULL,
orderdetailid INT REFERENCES orderdetails(orderdetailid)
);

inserted values to payments table
INSERT INTO payments (payment_date, amount, orderdetailid) VALUES
('2023-09-15', 100.00, 1),
('2023-09-16', 75.50, 2),
('2023-09-17', 200.25, 3),
('2023-09-18', 50.75, 4),
('2023-09-19', 300.00, 5);